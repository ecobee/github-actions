name: 'GO: Build artifact'
description: 'Builds golang image'
inputs:
  build-command:
    description: 'Command to build your service (i.e. make build)'
    required: false
    default: 'make artifact-local'
  service:
    description: 'Service to build'
    required: true
outputs:
  build-tag:
    description: 'build-tag for eventual deploy'
    value: ${{ steps.output-build-tag.outputs.build-tag }}
runs:
  using: 'composite'
  steps:
    - name: Get current timestamp
      run: echo "NOW=$(date '+%Y%m%d-%H%M')" >> $GITHUB_ENV
      shell: bash
    - name: Set env
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
      shell: bash
    - name: Build app # assumes makefile with this target to make a binary
      run: ${{ inputs.build-command }}
      shell: bash
    - name: Copy artifact with build tag appended
      run: cp ${{ inputs.service }} ${{ inputs.service }}.${{ env.NOW }}-${{ env.GITHUB_SHA_SHORT }}
      shell: bash
    - name: Output docker tag
      id: output-build-tag
      run: echo "::set-output name=build-tag::$(echo $NOW-$GITHUB_SHA_SHORT)"
      shell: bash
